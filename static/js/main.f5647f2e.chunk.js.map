{"version":3,"sources":["components/header/header.js","components/list/list.js","components/addItem/addItem.js","components/rootComponent/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","List","_ref","toDoItem","handleDelete","items","length","map","item","index","key","id","task","style","margin","onClick","role","aria-label","AddItem","state","showErrorMessage","handleSubmit","event","preventDefault","_this","setState","prevSate","props","addItem","handleChange","target","value","onSubmit","this","border","type","placeholder","name","onChange","color","React","Component","App","toDoList","Math","random","toString","substring","itemToAdd","concat","Object","toConsumableArray","afterDelete","filter","Fragment","header","list","Boolean","window","location","hostname","match","ReactDOM","render","rootComponent_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5647f2e.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header  = () => {\n\n    return (\n        <section className=\"hero is-primary\">\n            <div className=\"hero-body\">\n                <h1 className=\"title has-text-centered is-uppercase has-text-weight-bold is-size-1\">\n                        To Do's \n                    </h1>\n                </div>\n        </section>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nconst List = ({toDoItem, handleDelete}) => {\n    \n    const items = toDoItem.length > 0 ? \n                    toDoItem.map((item,index) => {\n                        return (\n                            <div className=\"card\" key={item.id}>    \n                                <header className=\"card-header\" >\n                                    <p className=\"card-header-title\">\n                                        {item.task}\n                                        \n                                    </p>\n                                    <button className=\"delete\" style={{ margin: '.8rem' }} onClick={() => handleDelete(item.id)}></button>\n                                   \n                                </header>\n                                \n                            </div>\n                        )\n                    }) :\n\n                    (\n                        <div className=\"notification is-primary has-text-weight-bold\">\n                            Yepeeeeee!!!! Your To Do List Is Empty.<span role=\"img\" aria-label=\"smiley\">ðŸ˜€</span>\n                        </div>\n                    );\n    \n    return (\n        \n        <div className=\"section\">\n            <div className=\"container\"> \n                {items}\n            </div>\n        </div>\n            \n        \n    )\n}\n\nexport default List;","import React from 'react';\n\n\nclass AddItem extends React.Component {\n    \n    state = {\n        task :'',\n        showErrorMessage : false\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n        if (this.state.task.length < 1){\n            this.setState(prevSate => {\n                return {\n                    showErrorMessage: !prevSate.showErrorMessage\n                }\n            })\n            return;\n        }\n\n        this.props.addItem(this.state);\n        this.setState({\n            task: ''\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            task : event.target.value,\n            showErrorMessage:false\n        })\n    }\n    render(){\n\n        return (\n\n            <form className=\"container\" onSubmit={this.handleSubmit}>\n                <div className=\"field\">\n                    <label className=\"label\">Add Item</label>\n                    <div className=\"control\" >\n                        <input style={this.state.showErrorMessage ? { border: '1px solid red' } : { border: ''} }  \n                                className=\"input\" type=\"text\" placeholder=\"Add Task...\" \n                                name=\"item\" onChange={this.handleChange}\n                                value={this.state.task}    \n                                />\n                    </div>\n                    {\n                        this.state.showErrorMessage && <p className=\"help\" style={{color:'red'}}>Please add the item.</p>\n                    }\n                </div>\n                <div className=\"field\">\n                    <p className=\"control\">\n                        <button className=\"button is-success\">\n                            ADD\n                        </button>\n                    </p>\n                </div>\n            </form>\n        )\n    }\n\n\n}\n\nexport default  AddItem;","import React, { Component } from 'react';\nimport 'bulma';\n\n\nimport Header from '../header/header';\nimport List from '../list/list';\nimport AddItem from '../addItem/addItem';\n\nclass App extends Component {\n\n  state = {\n    toDoList: [\n                {\n                  task:'Complete React Course',\n                  id: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n                },\n                {\n                  task: 'Start React Project',\n                  id: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n                }\n    ]\n  }\n\n  addItem = (itemToAdd) => { \n    // console.log(itemToAdd)\n    itemToAdd.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    this.setState(prevSate => {\n      return {\n        toDoList: [...prevSate.toDoList, itemToAdd]\n      }\n    });\n\n    // console.log(this.state)\n  }\n  handleDelete = (id) => {\n    const afterDelete = this.state.toDoList.filter(item => {\n      return item.id !== id;\n    })\n\n    this.setState({\n      toDoList: afterDelete\n    });\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        <List toDoItem={this.state.toDoList} handleDelete={this.handleDelete}/>\n        <div className=\"section\">\n          <AddItem addItem={this.addItem} />\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/rootComponent/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}